name: Test
on:
  workflow_call:
    inputs:
      IDEA_VERSION:
        required: true
        type: string
      WITH_IDEA_PLUGINS:
        required: true
        type: string
      SCALA_PLUGIN_VERSION:
        required: false
        type: string
jobs:
  test:
    name: test IDEA ${{inputs.IDEA_VERSION}} with plugins:${{inputs.WITH_IDEA_PLUGINS}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Run tests
        id: run-test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            check
            jacocoRootReport
            -PideaVersion=${{ inputs.IDEA_VERSION }} 
            -PscalaPluginVersion=${{ inputs.SCALA_PLUGIN_VERSION }}
            -PenableIdeaGroovyPlugin=${{ inputs.WITH_IDEA_PLUGINS }}
            -PenableIdeaScalaPlugin=${{ inputs.WITH_IDEA_PLUGINS }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results (${{inputs.IDEA_VERSION}},${{inputs.WITH_IDEA_PLUGINS}})
          path: build/test-results/**/*.xml
          reporter: java-junit

      - name: Test Results artifacts
        uses: actions/upload-artifact@v2
        if: (success() || failure()) && ${{ inputs.WITH_IDEA_PLUGINS == 'true' && inputs.IDEA_VERSION == '2023.2' }}
        with:
          name: test results ${{inputs.IDEA_VERSION}} plugins=${{inputs.WITH_IDEA_PLUGINS}}
          path: build/reports/**

      - name: On failure - log report
        #      if: failure()
        if: ( success() || failure() ) && steps.run-test.outcome != 'success'
        run: ./print_surefire_reports.sh

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
#          files: ./coverage1.xml,./coverage2.xml # optional
#          flags: unittests # optional
#          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
